{"ast":null,"code":"var _jsxFileName = \"/home/janet/Downloads/phase-2-project/src/components/Table.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTable } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Table(_ref) {\n  _s();\n\n  let {\n    columns,\n    data\n  } = _ref;\n  const {\n    getTableProps,\n    // table props from react-table\n    getTableBodyProps,\n    // table body props from react-table\n    headerGroups,\n    // headerGroups, if your table has groupings\n    rows,\n    // rows for the table based on the data passed\n    prepareRow // Prepare the row (this function needs to be called for each row before getting the row props)\n\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps({\n      title,\n      author,\n      publication,\n      edition,\n      price\n    }),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps({\n          title,\n          author,\n          publication,\n          edition,\n          price\n        }),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps({\n        title,\n        author,\n        publication,\n        edition,\n        price\n      }),\n      children: rows.map((row, i) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              children: cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Table, \"kf9OMlYMhRgXan4DZAMxVArUf+s=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useTable","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","title","author","publication","edition","price","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps"],"sources":["/home/janet/Downloads/phase-2-project/src/components/Table.js"],"sourcesContent":["import React from 'react';\nimport { useTable } from 'react-table';\n\nexport default function Table({columns, data}) {\n\n    const {\n        getTableProps, // table props from react-table\n        getTableBodyProps, // table body props from react-table\n        headerGroups, // headerGroups, if your table has groupings\n        rows, // rows for the table based on the data passed\n        prepareRow // Prepare the row (this function needs to be called for each row before getting the row props)\n      } = useTable({\n        columns,\n        data\n      });\n  return (\n    <table {...getTableProps({title,author,publication,edition,price})}>\n    <thead>\n      {headerGroups.map(headerGroup => (\n        <tr {...headerGroup.getHeaderGroupProps({title,author,publication,edition,price})}>\n          {headerGroup.headers.map(column => (\n            <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n          ))}\n        </tr>\n      ))}\n    </thead>\n    <tbody {...getTableBodyProps({title,author,publication,edition,price})}>\n      {rows.map((row, i) => {\n        prepareRow(row);\n        return (\n          <tr {...row.getRowProps()}>\n            {row.cells.map(cell => {\n              return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n            })}\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;;AAEA,eAAe,SAASC,KAAT,OAAgC;EAAA;;EAAA,IAAjB;IAACC,OAAD;IAAUC;EAAV,CAAiB;EAE3C,MAAM;IACFC,aADE;IACa;IACfC,iBAFE;IAEiB;IACnBC,YAHE;IAGY;IACdC,IAJE;IAII;IACNC,UALE,CAKS;;EALT,IAMAR,QAAQ,CAAC;IACXE,OADW;IAEXC;EAFW,CAAD,CANd;EAUF,oBACE,sBAAWC,aAAa,CAAC;MAACK,KAAD;MAAOC,MAAP;MAAcC,WAAd;MAA0BC,OAA1B;MAAkCC;IAAlC,CAAD,CAAxB;IAAA,wBACA;MAAA,UACGP,YAAY,CAACQ,GAAb,CAAiBC,WAAW,iBAC3B,mBAAQA,WAAW,CAACC,mBAAZ,CAAgC;UAACP,KAAD;UAAOC,MAAP;UAAcC,WAAd;UAA0BC,OAA1B;UAAkCC;QAAlC,CAAhC,CAAR;QAAA,UACGE,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,iBAC7B,mBAAQA,MAAM,CAACC,cAAP,EAAR;UAAA,UAAkCD,MAAM,CAACE,MAAP,CAAc,QAAd;QAAlC;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QADA,eAUA,sBAAWf,iBAAiB,CAAC;QAACI,KAAD;QAAOC,MAAP;QAAcC,WAAd;QAA0BC,OAA1B;QAAkCC;MAAlC,CAAD,CAA5B;MAAA,UACGN,IAAI,CAACO,GAAL,CAAS,CAACO,GAAD,EAAMC,CAAN,KAAY;QACpBd,UAAU,CAACa,GAAD,CAAV;QACA,oBACE,mBAAQA,GAAG,CAACE,WAAJ,EAAR;UAAA,UACGF,GAAG,CAACG,KAAJ,CAAUV,GAAV,CAAcW,IAAI,IAAI;YACrB,oBAAO,mBAAQA,IAAI,CAACC,YAAL,EAAR;cAAA,UAA8BD,IAAI,CAACL,MAAL,CAAY,MAAZ;YAA9B;cAAA;cAAA;cAAA;YAAA,QAAP;UACD,CAFA;QADH;UAAA;UAAA;UAAA;QAAA,QADF;MAOD,CATA;IADH;MAAA;MAAA;MAAA;IAAA,QAVA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD;;GArCuBnB,K;UAQdD,Q;;;KARcC,K"},"metadata":{},"sourceType":"module"}