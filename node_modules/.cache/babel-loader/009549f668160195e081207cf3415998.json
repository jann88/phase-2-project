{"ast":null,"code":"// import React from 'react';\n// import { useTable } from 'react-table';\n// import Context from './Context';\n// import BookDetails from './BookDetails';\n// export default function Table({columns, books}) {\n//     const {\n//         getTableProps, // table props from react-table\n//         getTableBodyProps, // table body props from react-table\n//         headerGroups, // headerGroups, if your table has groupings\n//         rows, // rows for the table based on the data passed\n//         prepareRow // Prepare the row (this function needs to be called for each row before getting the row props)\n//       } = useTable({\n//         columns,\n//         books\n//       });\n//   return (\n//     <table {...getTableProps({Context})}>\n//     <thead>\n//       {headerGroups.map(headerGroup => (\n//         <tr {...headerGroup.getHeaderGroupProps({Context})}>\n//           {headerGroup.headers.map(column => (\n//             <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n//           ))}\n//         </tr>\n//       ))}\n//     </thead>\n//     <tbody {...getTableBodyProps({BookDetails})}>\n//       {rows.map((row, i) => {\n//         prepareRow(row);\n//         return (\n//           <tr {...row.getRowProps()}>\n//             {row.cells.map(cell => {\n//               return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n//             })}\n//           </tr>\n//         );\n//       })}\n//     </tbody>\n//   </table>\n// );\n// }","map":{"version":3,"names":[],"sources":["/home/janet/Downloads/phase-2-project/src/components/Table.js"],"sourcesContent":["// import React from 'react';\n// import { useTable } from 'react-table';\n// import Context from './Context';\n// import BookDetails from './BookDetails';\n\n// export default function Table({columns, books}) {\n\n//     const {\n//         getTableProps, // table props from react-table\n//         getTableBodyProps, // table body props from react-table\n//         headerGroups, // headerGroups, if your table has groupings\n//         rows, // rows for the table based on the data passed\n//         prepareRow // Prepare the row (this function needs to be called for each row before getting the row props)\n//       } = useTable({\n//         columns,\n//         books\n//       });\n//   return (\n//     <table {...getTableProps({Context})}>\n//     <thead>\n//       {headerGroups.map(headerGroup => (\n//         <tr {...headerGroup.getHeaderGroupProps({Context})}>\n//           {headerGroup.headers.map(column => (\n//             <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n//           ))}\n//         </tr>\n//       ))}\n//     </thead>\n//     <tbody {...getTableBodyProps({BookDetails})}>\n//       {rows.map((row, i) => {\n//         prepareRow(row);\n//         return (\n//           <tr {...row.getRowProps()}>\n//             {row.cells.map(cell => {\n//               return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n//             })}\n//           </tr>\n//         );\n//       })}\n//     </tbody>\n//   </table>\n// );\n// }\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}